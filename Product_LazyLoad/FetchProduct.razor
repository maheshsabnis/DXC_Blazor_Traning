@page "/fetchproducts"
@using System.Net.Http
@using System.Text.Json
<h3>Fetch Product Using Lazy Loading</h3>

<div class="container">
    <table class="table table-bordered table-striped">
        <thead>
            <tr>
                <th>Product Row Id</th>
                <th>Product  Id</th>
                <th>Product Name</th>
                <th>Category Name</th>
                <th>Manufacturer</th>
                <th>Description</th>
                <th>Base Price</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var prd in products)
            {
            <tr>
                <td>@prd.ProductRowId</td>
                <td>@prd.ProductId</td>
                <td>@prd.ProductName</td>
                <td>@prd.CategoryName</td>
                <td>@prd.Manufacturer</td>
                <td>@prd.Description</td>
                <td>@prd.BasePrice</td>
            </tr>
            }
        </tbody>
    </table>
</div>

@code { 

    private List<ProductInfo> products;
    HttpClient client;

    protected override async Task OnInitializedAsync()
    {
        products = new List<ProductInfo>();
        client = new HttpClient();

        HttpResponseMessage response = await client.GetAsync("https://apiapptrainingnewapp.azurewebsites.net/api/Products");
        response.EnsureSuccessStatusCode();
        // read Response Contents
        string jsonData = await response.Content.ReadAsStringAsync();

        products = JsonSerializer.Deserialize<List<ProductInfo>>(jsonData);

    }


    public class ProductInfo
    {
        public int ProductRowId { get; set; }
        public string ProductId { get; set; }
        public string ProductName { get; set; }
        public string CategoryName { get; set; }
        public string Manufacturer { get; set; }
        public string Description { get; set; }
        public int BasePrice { get; set; }
    }

}
