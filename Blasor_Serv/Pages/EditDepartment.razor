<!--{id:int} the restrictions are that id will be integer only-->
@page "/deptedit/{id:int}"
@using Blasor_Serv.Models
@using Blasor_Serv.Services
@inject NavigationManager navigate
@inject IService<Department, int> deptServ

<h3>Edit Department with DeptNo as @id</h3>
<div class="container">
    <EditForm Model="@department">
        <div class="form-group">
            <label>Dept No</label>
            <InputNumber @bind-Value="@department.DeptNo" class="form-control"></InputNumber>
        </div>
        <div class="form-group">
            <label>Dept Name</label>
            <InputText @bind-Value="@department.DeptName" class="form-control"></InputText>
        </div>
        <div class="form-group">
            <label>Location</label>
            <InputText @bind-Value="@department.Location" class="form-control"></InputText>
        </div>
        <div class="form-group">
            <input type="button" value="Clear" class="btn btn-warning" @onclick="@clear" />
            <input type="button" value="Save" class="btn btn-success" @onclick="@save" />
        </div>
    </EditForm>
</div>


@code {
    Department department;

    [Parameter] // The ParameterAttribute represents that the component will accept parameter from other component
    public int id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        department = new Department();
        department = await deptServ.GetAsync(id);
        base.OnInitialized();
    }
    void clear()
    {
        department = new Department();
    }
    async Task save()
    {
        var res = await deptServ.CreateAsync(department);
        navigate.NavigateTo("/deptindex");

    }
}
